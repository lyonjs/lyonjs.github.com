export type Speaker = {
  name: string;
  talk?: {
    title: string;
    description?: string;
  };
  avatarUrl: string;
  social: {
    twitter?: string;
    linkedin?: string;
  };
};

const matthieuLux: Speaker = {
  name: 'Matthieu Lux',
  avatarUrl: '/speakers/matthieu-lux.webp',
  social: { twitter: 'swiip', linkedin: 'swiip' },
  talk: {
    title: 'Astro, le framework Web JS multi page',
    description: `Et si finalement, on faisait des sites avec plusieurs pages ?

Astro est d'abord un framework Web JS bas√© sur Vite qui permet d'utiliser pratiquement n'importe quel framework frontend: React, Vue, mais aussi Svelte, Solid, Preact... Et m√™me plusieurs d'entre eux √† la fois si n√©cessaire. Au milieu des tout puissants Next et Nuxt, ce trublion propose une voie √©tonnement simple : revenir au site multi page ! Cela lui permet d'afficher des performances incroyables.

(Pratiquement ?) Tous les serveurs Web JS modernes proposent ni plus ni moins qu'une application JS qui ne fait que faire semblant de se comporter comme un site Web. Cela ne fonctionne pas si mal bien s√ªr, mais cela a tout de m√™me un co√ªt, √† la fois en performance et en complexit√©. Astro propose une autre voie, on revient aux vraies pages Web et √† la navigation entre deux pages. On se rend vite compte que cela ne marche pas si mal, bizarrement, les navigateurs le g√®re plut√¥t bien ! Mais attention, avec tout le confort et la puissance des outils JS moderne !

Chez Proton, nous nous sommes engag√©s sur Astro pour les sites Web. Une partie est maintenant en production, une autre est encore en cours. Outre les fonctionnalit√©s du framework, je vous propose un retour d'experience sur notre migration, nos difficult√©s et nos succ√®s.`,
  },
};

const jeremiePatonnier: Speaker = {
  name: 'J√©r√©mie Patonnier',
  avatarUrl: '/speakers/jeremie-patonnier.jpg',
  social: { twitter: 'jeremiepat' },
  talk: {
    title: "Deno, l'avenir du dev JS/TS ?",
    description:
      "Deno est la nouvelle alternative √† Node... si on en crois Ryan Dahl, le cr√©ateur de ces deux environnements ! Si Node est devenus un standard industriel pour le d√©veloppement de serveur d'API et d'application Web Front, quel est l'int√©r√™t de Deno ? Juste un runtime JS de plus ? Que nenni, Deno, c'est Node avec 10 d'exp√©rience en plus, avec des paradigme plus moderne, des choix d'architecture plus robuste et tout un √©cosyst√®me pour supporter l'usage de JavaScript et TypeScript √† grande √©chelle. Il y a beaucoup √† dire... alors si on se prenait un petit moment pour faire le tour de ce nouvel environnement d'ex√©cution JS qui va tr√®s vraisemblablement changer nos pratiques de dev dans les 5 ans √† venir ?",
  },
};

const jonnyBurger: Speaker = {
  name: 'Jonny Burger',
  avatarUrl: '/speakers/jonny-burger.png',
  social: { twitter: 'JNYBGR', linkedin: 'jonny-burger-4115109b' },
  talk: {
    title: 'How to build a video editor in React',
    description: `In this very concrete talk, I'll give an outline in 30 minutes on how to build a video editor from scratch.
We'll talk about:

- Building a canvas with user interactions
- Creating a timeline
- Adding captioning with AI functionality
- Rendering out the video!

None of these will be in-depth but by the end of the talk, you shall have no fear if you want to build your own video editor!`,
  },
};

const ayoubAlouane: Speaker = {
  name: `Ayoub Alouane`,
  avatarUrl: '/speakers/ayoub-alouane.png',
  social: { twitter: 'alouane_med', linkedin: 'med-ayb-alouane' },
  talk: {
    title: "La Performance Web : Le cas de l'Afrique",
    description: `Nous partons souvent du principe que tout le monde dispose d'une bonne connexion Internet et d'un mat√©riel informatique de haute sp√©cification. Bien que cela puisse √™tre vrai dans certaines r√©gions, ce n'est pas le cas dans le monde entier. Je souhaite attirer l'attention sur l'Afrique, o√π de nombreux pays luttent contre de faibles connexions 3G co√ªteuses, en fonction de la quantit√© de donn√©es consomm√©es. Ceci est d√ª √† l'infrastructure limit√©e du continent, conduisant √† une d√©pendance aux connexions mobiles.

Compte tenu de ces circonstances, une utilisation efficace des donn√©es avec une bonne performance web devient une priorit√©. Ainsi, notre session se concentrera sur les d√©fis rencontr√©s par les utilisateurs et les d√©veloppeurs africains, et comment le t√©l√©chargement et l'ex√©cution de grandes quantit√©s de JavaScript exacerbe les probl√®mes de consommation de donn√©es et de performance. Nous explorerons comment les frameworks js existants ont tent√© de r√©soudre le probl√®me et comment Qwik, avec son approche innovante de la Resumability, pr√©sente une solution transformatrice √† ces d√©fis. Contrairement aux SPAs traditionnels, la Resumability de Qwik r√©duit consid√©rablement la charge initiale de JavaScript, permettant aux applications de devenir interactives plus rapidement, m√™me sur des connexions lentes.`,
  },
};

const julienSulpis: Speaker = {
  name: 'Julien Sulpis',
  avatarUrl: '/speakers/julien-sulpis.png',
  social: { twitter: 'jsulpis', linkedin: 'julien-sulpis' },
  talk: {
    title: 'Savez-vous vraiment ce qu‚Äôest la couleur ? D√©couvrez la science derri√®re les pixels üé®',
    description: `Si la couleur est souvent vue sous un angle cr√©atif, c‚Äôest aussi une science qui peut expliquer certaines bizarreries : pourquoi les m√™mes couleurs ont l‚Äôair plus satur√©es sur ma maquette Figma que sur ma page web ? Est-ce qu‚Äôil y a un rouge ‚Äúplus rouge‚Äù que le rgb(255, 0, 0) ? Pourquoi le jaune para√Æt plus clair que le bleu √† luminosit√© √©gale ?

Ces questions sont toutes li√©es √† notre repr√©sentation des couleurs. Dans ce talk, je vous emm√®ne dans un voyage √† travers l‚ÄôHistoire et les sciences pour comprendre, r√©ellement, les codes couleur que vous utilisez dans vos applications.

Vous y d√©couvrirez ce que sont les espaces de couleur (sRGB, P3‚Ä¶), les notations courantes comme RGB ou HSL, et en quoi elles peuvent √™tre trompeuses. Vous verrez enfin comment les derni√®res notations OKLAB et OKLCH, plus fid√®les √† notre perception des couleurs, peuvent permettre par exemple de cr√©er des gradients ou des palettes de couleur coh√©rentes beaucoup plus facilement !`,
  },
};

const manonCarbonnel: Speaker = {
  name: 'Manon Carbonnel',
  avatarUrl: '/speakers/manon-carbonnel.png',
  social: { twitter: 'manoncarbonnel_', linkedin: 'manon-carbonnel' },
  talk: {
    title: 'Crafter de meilleures UI, en pensant le DOM comme une API',
    description: `Arrivant souvent sur les projets en "mode pompier", j'ai acquis des r√©flexes lorsqu'il s'agit de rapidement corriger ou terminer l'int√©gration d'application web.

Mais comment faire pour maintenir ces bonnes pratiques une fois le feu √©teint ? Comment am√©liorer le code sans casser l'UI ? Comment bien d√©marrer l'int√©gration d'une nouvelle application ?

Nos UI sont autant utilis√©es par des humains que par des lecteurs d'√©cran, ou encore des outils de test et des robots... il faut donc penser le DOM comme une API, et pas seulement reproduire une maquette.
Autour de cet axe, je vous propose quelques outils et id√©es d'ateliers collaboratifs pour d√©velopper des interfaces testables, modulaires et accessibles. Et pourquoi pas un Design System ?

Vous repartirez avec une nouvelle vision du m√©tier de l'int√©gration web, des pratiques et quelques outils √† utiliser d√®s demain pour am√©liorer le quotidien de votre projet.`,
  },
};

const julienHuang: Speaker = {
  name: 'Julien Huang',
  avatarUrl: '/speakers/julien-huang.png',
  social: { twitter: 'JulienHuang_dev', linkedin: 'julien-huang' },
  talk: {
    title: 'Tout sur les composants serveur Nuxt',
    description: `Tout le monde conna√Æt les "server components" de React et Next. Mais qu‚Äôen est-il de l‚Äô√©cosyst√®me VueJS ? Avec Nuxt, le m√©ta-framework bas√© sur VueJS, nous avons aussi des composants serveur ! Bien que le nom soit le m√™me, leur fonctionnement est diff√©rent.
   
Dans ce talk, nous verrons ce que sont les Islands ainsi que les composants serveur dans Nuxt, et ce qui les distingue des composants serveur de React et des Islands d‚ÄôAstro.`,
  },
};

export const speakers: Array<Speaker> = [matthieuLux, jeremiePatonnier, jonnyBurger, ayoubAlouane];

export const program: Array<{ time: string; speaker?: Speaker; title?: string }> = [
  { time: '08:00', title: 'ü•ê Accueil & Petit d√©jeuner' },
  { time: '09:00', title: 'üé§ Keynote' },
  { time: '09:30', speaker: matthieuLux },
  { time: '10:30', title: '‚òï Pause' },
  { time: '10:50', speaker: ayoubAlouane },
  { time: '11:50', speaker: jonnyBurger },
  { time: '12:20', title: 'üçΩÔ∏è D√©jeuner' },
  { time: '14:00', speaker: julienSulpis },
  { time: '15:00', speaker: manonCarbonnel },
  { time: '16:00', title: '‚òï Pause' },
  { time: '16:20', speaker: jeremiePatonnier },
  { time: '17:10', speaker: julienHuang },
  { time: '18:00', title: 'üéâ Fin' },
];
